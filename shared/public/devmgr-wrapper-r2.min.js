var LWDeviceManager=function(){var connState=["Connecting","Connected","Reconnecting","Disconnecting","Disconnected"];var currConnState=4;var devMgrConnStr="http://localhost:60559/signalr";var conn=$.hubConnection(devMgrConnStr);conn.reconnecting((function(){console.log("attempting to reconnect")}));conn.reconnected((function(){console.log("reconnected")}));conn.disconnected((function(){console.error("disconnected");setTimeout((function(){conn.start().done((function(){console.log("Connected")})).fail((function(err){console.error(JSON.stringify(err))}))}),5e3)}));var proxy=conn.createHubProxy("deviceManagerHub");proxy.on("_a",(function(){}));conn.stateChanged((function(t,u){currConnState=t.newState;console.info("DeviceManager state changed from: '"+connState[t.oldState]+"' to '"+connState[t.newState]+"'")}));var utils={getDateForEIoTOrder:function(){var d=new Date;var year=d.getFullYear();year=year.toString();var month=d.getMonth();++month;if(month<10){month="0"+month}month=month.toString();var day=d.getDate();if(day<10){day="0"+day}day=day.toString();var hours=d.getHours();if(hours<10){hours="0"+hours}hours=hours.toString();var mins=d.getMinutes();if(mins<10){mins="0"+mins}mins=mins.toString();var secs=d.getSeconds();if(secs<10){secs="0"+secs}secs=secs.toString();return year+"-"+month+"-"+day+"T"+hours+":"+mins+":"+secs}};var internal={getAllComponents:function(cb){conn.start().done((function(){proxy.invoke("GetAllComponents").done((function(comps){cb(comps)})).fail((function(err){console.error(JSON.stringify(err));cb([])}))})).fail((function(err){console.error(JSON.stringify(err));cb([])}))},getEIoTDeviceConfig:function(cb){conn.start().done((function(){proxy.invoke("GetEIoTDeviceConfig").done((function(config){cb(config)})).fail((function(err){console.error(JSON.stringify(err));cb(null)}))})).fail((function(err){console.error(JSON.stringify(err));cb(null)}))},API_EngageTransaction_Initialize:function(idx,componentModel,cb){conn.start().done((function(){proxy.invoke("API_EngageTransaction_Initialize",idx,componentModel).done((function(){cb(true)})).fail((function(err){console.error(JSON.stringify(err));cb(false)}))})).fail((function(err){console.error(JSON.stringify(err));cb(false)}))},API_EngageTransaction_GetNewPOSOrderId:function(idx,componentModel,deviceId,cb){conn.start().done((function(){var d=new Date;var year=d.getFullYear();year=year.toString();var month=d.getMonth();++month;if(month<10){month="0"+month}month=month.toString();var day=d.getDate();if(day<10){day="0"+day}day=day.toString();var hours=d.getHours();if(hours<10){hours="0"+hours}hours=hours.toString();var mins=d.getMinutes();if(mins<10){mins="0"+mins}mins=mins.toString();var secs=d.getSeconds();if(secs<10){secs="0"+secs}secs=secs.toString();var dateStr=year+month+day+hours+mins+secs;proxy.invoke("API_EngageTransaction_GetNewPOSOrderId",idx,componentModel,deviceId,dateStr).done((function(orderId){cb(orderId)})).fail((function(err){console.error(JSON.stringify(err));cb(null)}))})).fail((function(err){console.error(JSON.stringify(err));cb(null)}))},API_EngageTransaction_ProcessOrder:function(idx,componentModel,payload,cb){conn.start().done((function(){proxy.invoke("API_EngageTransaction_ProcessOrder",idx,componentModel,payload).done((function(){cb(true)})).fail((function(err){console.error(JSON.stringify(err));cb(false)}))})).fail((function(err){console.error(JSON.stringify(err));cb(false)}))},EMV_DoSale:function(idx,componentModel,properties,credIdx,routeId,items,cb,saleCb){conn.start().done((function(){proxy.off("onEMVResponse");proxy.on("onEMVResponse",(function(res){saleCb(res)}));proxy.invoke("EMV_DoSale",idx,componentModel,properties,credIdx,routeId,items).done((function(){cb()})).fail((err=>{console.error(JSON.stringify(err));saleCb(null)}))})).fail((function(err){console.error(JSON.stringify(err));saleCb(null)}))}};return{init:function(cb){conn.start().done((function(){cb(true)})).fail((function(err){console.error(JSON.stringify(err));cb(false)}))},getStateNumber:function(){return currConnState},getState:function(){return connState[currConnState]},getAllComponents:internal.getAllComponents,getEIoTDeviceConfig:internal.getEIoTDeviceConfig,getVersion:function(cb,errCb){conn.start().done((function(){proxy.invoke("GetVersion").done((function(v){cb(v)})).fail((function(err){console.error(JSON.stringify(err));errCb()}))})).fail((function(err){console.error(JSON.stringify(err));errCb()}))},appLog_Info:function(text,cb,errCb){conn.start().done((function(){proxy.invoke("AppLog_Info",text).done((function(){cb()})).fail((function(err){console.error(JSON.stringify(err));errCb()}))})).fail((function(err){console.error(JSON.stringify(err));errCb()}))},appLog_Warning:function(text,cb,errCb){conn.start().done((function(){proxy.invoke("AppLog_Warning",text).done((function(){cb()})).fail((function(err){console.error(JSON.stringify(err));errCb()}))})).fail((function(err){console.error(JSON.stringify(err));errCb()}))},appLog_Error:function(text,cb,errCb){conn.start().done((function(){proxy.invoke("AppLog_Error",text).done((function(){cb()})).fail((function(err){console.error(JSON.stringify(err));errCb()}))})).fail((function(err){console.error(JSON.stringify(err));errCb()}))},API_EngageTransaction_Initialize:internal.API_EngageTransaction_Initialize,API_EngageTransaction_ProcessOrder:internal.API_EngageTransaction_ProcessOrder,API_EngageTransaction_GetNewPOSOrderId:internal.API_EngageTransaction_GetNewPOSOrderId,EMV_DoSale:internal.EMV_DoSale,TicketPrinter_GetLowPaperStatus:function(idx,compModelName,cb,errCb){conn.start().done((function(){proxy.off("onTicketPrinterGetStatus_Event");proxy.on("onTicketPrinterGetStatus_Event",(function(evt){if(evt.Idx==idx&&evt.ComponentModelName.toLowerCase()==compModelName.toLowerCase()){cb(evt.Payload)}}));proxy.invoke("TicketPrinter_GetLowPaperStatus",idx,compModelName).done((function(){})).fail((function(err){console.error(JSON.stringify(err));errCb()}))})).fail((function(err){console.error(JSON.stringify(err));errCb()}))},TicketPrinter_PrintTicket:function(idx,compModelName,fgl,cut,cb,errCb){conn.start().done((function(){proxy.off("onTicketPrinterPrinted_Event");proxy.on("onTicketPrinterPrinted_Event",(function(evt){if(evt.Idx==idx&&evt.ComponentModelName.toLowerCase()==compModelName.toLowerCase()){cb(evt.Payload)}}));proxy.invoke("TicketPrinter_Print",idx,compModelName,fgl,cut).done((function(){})).fail((function(err){console.error(JSON.stringify(err));errCb()}))})).fail((function(err){console.error(JSON.stringify(err));errCb()}))},AnalogModem_IsConnected:function(idx,compModelName,cb,errCb){conn.start().done((function(){proxy.invoke("AnalogModem_IsConnected",idx,compModelName).done((function(res){cb(res)})).fail((function(err){console.error(JSON.stringify(err));errCb()}))})).fail((function(err){console.error(JSON.stringify(err));errCb()}))},AnalogModem_Dial:function(idx,compModelName,phoneNumber,cb,errCb){conn.start().done((function(){proxy.off("on_AnalogModemResponse_Event");proxy.on("on_AnalogModemResponse_Event",(function(evt){if(evt.Idx==idx&&evt.ComponentModelName.toLowerCase()==compModelName.toLowerCase()){cb(evt.Payload)}}));proxy.invoke("AnalogModem_Dial",idx,compModelName,phoneNumber).done((function(){})).fail((function(err){console.error(JSON.stringify(err));errCb()}))})).fail((function(err){console.error(JSON.stringify(err));errCb()}))},AnalogModem_HangUp:function(idx,compModelName,cb,errCb){conn.start().done((function(){proxy.off("on_AnalogModemResponse_Event");proxy.on("on_AnalogModemResponse_Event",(function(evt){if(evt.Idx==idx&&evt.ComponentModelName.toLowerCase()==compModelName.toLowerCase()){cb(evt.Payload)}}));proxy.invoke("AnalogModem_HangUp",idx,compModelName).done((function(){})).fail((function(err){console.error(JSON.stringify(err));errCb()}))})).fail((function(err){console.error(JSON.stringify(err));errCb()}))},AggregateOps:{DoCreditCardTransaction:function(parameters,cb){if(parameters&&Object.keys(parameters).length>0){if(parameters["ShoppingCart"]){var shoppingCart=parameters["ShoppingCart"];var emvCompModelStr="";var defaultEmvCompModelStr="EMV.FreedomPay.FCC";if(parameters["EMVComponent"]){emvCompModelStr=parameters["EMVComponent"]}else{emvCompModelStr=defaultEmvCompModelStr}var engageIoTCompModelStr="API.EIoTCommerce.EngageTransaction";internal.getAllComponents((function(comps){if(comps&&comps.length>0){var emvComp=comps.find((ec=>ec.DeviceManagerInterface==emvCompModelStr));if(emvComp){internal.getEIoTDeviceConfig((function(eiotConfig){if(eiotConfig){var deviceId=eiotConfig.ID;var siteId=eiotConfig.SiteID;if(deviceId&&siteId){internal.API_EngageTransaction_Initialize(1,engageIoTCompModelStr,(function(){internal.API_EngageTransaction_GetNewPOSOrderId(1,engageIoTCompModelStr,deviceId,(function(engageOrderId){if(engageOrderId){if(parameters["InvoiceNumber"]){var props={ChargeAmount:shoppingCart.Total,MerchantReferenceCode:engageOrderId,InvoiceNumber:parameters["InvoiceNumber"]};internal.EMV_DoSale(emvComp.CompIdx,emvComp.DeviceManagerInterface,props,0,null,null,(function(){}),(function(emvResponse){if(emvResponse){var fccRequestId=emvResponse["RequestId"].toString();var emvCode=emvResponse["ErrorCode"].toString();if(emvCode=="100"||emvCode=="3021"){var maskedCCNo=emvResponse["MaskedCardNumber"]||"";var expiry=emvResponse["ExpiryDate"]||"";if(expiry.length>0){var expMonth=expiry.substring(0,2);var expYear=expiry.substring(2,4);expiry=expMonth+"/20"+expYear}var ccName=emvResponse["NameOnCard"]||"";var approvalCode=emvResponse["ApprovalCode"]||"";var brand=emvResponse["IssuerName"]||"";if(brand.toUpperCase()=="AMERICAN EXPRESS"){brand="AMEX"}if(brand.toUpperCase()=="MASTERCARD"){brand="MC"}if(brand.toUpperCase()=="DISCOVER"){brand="DISC"}if(brand.toUpperCase()=="DEBIT"){brand=""}var engageOrder={CustIDs:null,DeviceID:deviceId,OrderTypeID:1,SiteID:siteId,OrderStatus:"DD",TransactionID:0,Transaction:{ID:0,DeviceID:deviceId,TypeID:1},PaymentInfo:{PaymentDate:utils.getDateForEIoTOrder(),Settle:false,TenderedAmount:shoppingCart.Total,PaymentItems:[{ID:1,Type:1,Amount:shoppingCart.Total.toString(),CCAccountNo:maskedCCNo,CCExpirationDate:expiry,CCName:ccName,CCFullTrackData:"",CCTrack1:"",CCTrack2:"",Street:"",Zip:"",CCCvvNum:"",InvNum:"",PNRef:"",PinNum:"",RegNo:"",SureChargeAmt:"",CashBackAmt:"",AuthAmount:shoppingCart.Total.toString(),AuthResult:{Code:0,ApprovalCode:approvalCode,AuthTransactionNo:fccRequestId,AuthResultMessage:"APPROVED",ResponseCode:"00"},Brand:brand}]},ShoppingCart:shoppingCart,UpdateDateTime:null,UpdateUserId:0,PosOrderId:engageOrderId};var orderJSON=JSON.stringify(engageOrder);internal.API_EngageTransaction_ProcessOrder(1,engageIoTCompModelStr,orderJSON,(function(){cb(emvResponse)}))}else{cb(emvResponse)}}else{cb({EngageError:"Failed to invoke the payment device."})}}))}else{cb({EngageError:"Invalid or missing 'InvoiceNumber' in your request."})}}else{cb({EngageError:"Failed to generate an engageOrderId"})}}))}))}else{cb({EngageError:"Failed to obtain the EIoT Device Config"})}}else{cb({EngageError:"Failed to obtain the EIoT Device Config"})}}))}else{cb({EngageError:"No EMV component was found."})}}else{cb({EngageError:"No components were found."})}}))}else{cb({EngageError:"Invalid or missing 'ShoppingCart' in your request."})}}else{cb({EngageError:"No parameters present in your request."})}}}}}();